# Generated from Narsese.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2-")
        buf.write("\u0147\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\3\2\3\2\3")
        buf.write("\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t")
        buf.write("\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3")
        buf.write("\16\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22")
        buf.write("\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27")
        buf.write("\3\27\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34")
        buf.write("\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\35\5\35\u00ae\n\35\3\36\3\36\3\36\3\36\3\36\3\36\3")
        buf.write("\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37")
        buf.write("\3 \3 \3 \5 \u00c4\n \3 \3 \3 \5 \u00c9\n \3 \3 \3 \5")
        buf.write(" \u00ce\n \5 \u00d0\n \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3")
        buf.write("!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3")
        buf.write("!\3!\3!\3!\3!\3!\3!\3!\5!\u00f6\n!\3\"\3\"\3\"\3\"\3#")
        buf.write("\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3&\5&\u0108\n&\3&\6&\u010b")
        buf.write("\n&\r&\16&\u010c\3&\5&\u0110\n&\3&\6&\u0113\n&\r&\16&")
        buf.write("\u0114\3\'\6\'\u0118\n\'\r\'\16\'\u0119\3(\3(\7(\u011e")
        buf.write("\n(\f(\16(\u0121\13(\3)\3)\3)\5)\u0126\n)\3*\6*\u0129")
        buf.write("\n*\r*\16*\u012a\3*\3*\3+\3+\3+\3+\7+\u0133\n+\f+\16+")
        buf.write("\u0136\13+\3+\3+\3,\3,\3,\3,\7,\u013e\n,\f,\16,\u0141")
        buf.write("\13,\3,\3,\3,\3,\3,\3\u013f\2-\3\3\5\4\7\5\t\6\13\7\r")
        buf.write("\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!")
        buf.write("\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67")
        buf.write("\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-\3\2\7\5\2##")
        buf.write("\60\60AB\4\2C\\c|\7\2//\62;C\\aac|\4\2\13\13\"\"\4\2\f")
        buf.write("\f\17\17\2\u0163\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2")
        buf.write("\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21")
        buf.write("\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3")
        buf.write("\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2")
        buf.write("\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2")
        buf.write("\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2")
        buf.write("\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2")
        buf.write("\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3")
        buf.write("\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q")
        buf.write("\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\3Y\3\2\2\2\5")
        buf.write("[\3\2\2\2\7]\3\2\2\2\t_\3\2\2\2\13a\3\2\2\2\rc\3\2\2\2")
        buf.write("\17e\3\2\2\2\21g\3\2\2\2\23i\3\2\2\2\25n\3\2\2\2\27p\3")
        buf.write("\2\2\2\31r\3\2\2\2\33t\3\2\2\2\35v\3\2\2\2\37x\3\2\2\2")
        buf.write("!z\3\2\2\2#}\3\2\2\2%\u0080\3\2\2\2\'\u0083\3\2\2\2)\u0086")
        buf.write("\3\2\2\2+\u0088\3\2\2\2-\u008a\3\2\2\2/\u008c\3\2\2\2")
        buf.write("\61\u008f\3\2\2\2\63\u0091\3\2\2\2\65\u0093\3\2\2\2\67")
        buf.write("\u0095\3\2\2\29\u00ad\3\2\2\2;\u00af\3\2\2\2=\u00b8\3")
        buf.write("\2\2\2?\u00cf\3\2\2\2A\u00f5\3\2\2\2C\u00f7\3\2\2\2E\u00fb")
        buf.write("\3\2\2\2G\u00ff\3\2\2\2I\u0103\3\2\2\2K\u0107\3\2\2\2")
        buf.write("M\u0117\3\2\2\2O\u011b\3\2\2\2Q\u0125\3\2\2\2S\u0128\3")
        buf.write("\2\2\2U\u012e\3\2\2\2W\u0139\3\2\2\2YZ\7>\2\2Z\4\3\2\2")
        buf.write("\2[\\\7}\2\2\\\6\3\2\2\2]^\7\177\2\2^\b\3\2\2\2_`\7@\2")
        buf.write("\2`\n\3\2\2\2ab\7*\2\2b\f\3\2\2\2cd\7,\2\2d\16\3\2\2\2")
        buf.write("ef\7.\2\2f\20\3\2\2\2gh\7+\2\2h\22\3\2\2\2ij\7G\2\2jk")
        buf.write("\7E\2\2kl\7J\2\2lm\7Q\2\2m\24\3\2\2\2no\7<\2\2o\26\3\2")
        buf.write("\2\2pq\7]\2\2q\30\3\2\2\2rs\7_\2\2s\32\3\2\2\2tu\7\'\2")
        buf.write("\2u\34\3\2\2\2vw\7=\2\2w\36\3\2\2\2xy\7a\2\2y \3\2\2\2")
        buf.write("z{\7(\2\2{|\7(\2\2|\"\3\2\2\2}~\7~\2\2~\177\7~\2\2\177")
        buf.write("$\3\2\2\2\u0080\u0081\7(\2\2\u0081\u0082\7~\2\2\u0082")
        buf.write("&\3\2\2\2\u0083\u0084\7(\2\2\u0084\u0085\7\61\2\2\u0085")
        buf.write("(\3\2\2\2\u0086\u0087\7~\2\2\u0087*\3\2\2\2\u0088\u0089")
        buf.write("\7(\2\2\u0089,\3\2\2\2\u008a\u008b\7\61\2\2\u008b.\3\2")
        buf.write("\2\2\u008c\u008d\7/\2\2\u008d\u008e\7/\2\2\u008e\60\3")
        buf.write("\2\2\2\u008f\u0090\7^\2\2\u0090\62\3\2\2\2\u0091\u0092")
        buf.write("\7/\2\2\u0092\64\3\2\2\2\u0093\u0094\7\u0080\2\2\u0094")
        buf.write("\66\3\2\2\2\u0095\u0096\t\2\2\2\u00968\3\2\2\2\u0097\u0098")
        buf.write("\7Q\2\2\u0098\u0099\7W\2\2\u0099\u009a\7V\2\2\u009a\u009b")
        buf.write("\3\2\2\2\u009b\u00ae\7<\2\2\u009c\u009d\7G\2\2\u009d\u009e")
        buf.write("\7Z\2\2\u009e\u009f\7G\2\2\u009f\u00a0\3\2\2\2\u00a0\u00ae")
        buf.write("\7<\2\2\u00a1\u00a2\7K\2\2\u00a2\u00a3\7P\2\2\u00a3\u00a4")
        buf.write("\3\2\2\2\u00a4\u00ae\7<\2\2\u00a5\u00a6\7C\2\2\u00a6\u00a7")
        buf.write("\7p\2\2\u00a7\u00a8\7u\2\2\u00a8\u00a9\7y\2\2\u00a9\u00aa")
        buf.write("\7g\2\2\u00aa\u00ab\7t\2\2\u00ab\u00ac\3\2\2\2\u00ac\u00ae")
        buf.write("\7<\2\2\u00ad\u0097\3\2\2\2\u00ad\u009c\3\2\2\2\u00ad")
        buf.write("\u00a1\3\2\2\2\u00ad\u00a5\3\2\2\2\u00ae:\3\2\2\2\u00af")
        buf.write("\u00b0\7`\2\2\u00b0\u00b1\7d\2\2\u00b1\u00b2\7g\2\2\u00b2")
        buf.write("\u00b3\7n\2\2\u00b3\u00b4\7k\2\2\u00b4\u00b5\7g\2\2\u00b5")
        buf.write("\u00b6\7x\2\2\u00b6\u00b7\7g\2\2\u00b7<\3\2\2\2\u00b8")
        buf.write("\u00b9\7`\2\2\u00b9\u00ba\7y\2\2\u00ba\u00bb\7q\2\2\u00bb")
        buf.write("\u00bc\7p\2\2\u00bc\u00bd\7f\2\2\u00bd\u00be\7g\2\2\u00be")
        buf.write("\u00bf\7t\2\2\u00bf>\3\2\2\2\u00c0\u00c3\7&\2\2\u00c1")
        buf.write("\u00c4\5O(\2\u00c2\u00c4\5M\'\2\u00c3\u00c1\3\2\2\2\u00c3")
        buf.write("\u00c2\3\2\2\2\u00c4\u00d0\3\2\2\2\u00c5\u00c8\7%\2\2")
        buf.write("\u00c6\u00c9\5O(\2\u00c7\u00c9\5M\'\2\u00c8\u00c6\3\2")
        buf.write("\2\2\u00c8\u00c7\3\2\2\2\u00c9\u00d0\3\2\2\2\u00ca\u00cd")
        buf.write("\7A\2\2\u00cb\u00ce\5O(\2\u00cc\u00ce\5M\'\2\u00cd\u00cb")
        buf.write("\3\2\2\2\u00cd\u00cc\3\2\2\2\u00ce\u00d0\3\2\2\2\u00cf")
        buf.write("\u00c0\3\2\2\2\u00cf\u00c5\3\2\2\2\u00cf\u00ca\3\2\2\2")
        buf.write("\u00d0@\3\2\2\2\u00d1\u00d2\7/\2\2\u00d2\u00d3\7/\2\2")
        buf.write("\u00d3\u00f6\7@\2\2\u00d4\u00d5\7>\2\2\u00d5\u00d6\7/")
        buf.write("\2\2\u00d6\u00f6\7@\2\2\u00d7\u00d8\7}\2\2\u00d8\u00d9")
        buf.write("\7/\2\2\u00d9\u00f6\7/\2\2\u00da\u00db\7/\2\2\u00db\u00dc")
        buf.write("\7/\2\2\u00dc\u00f6\7_\2\2\u00dd\u00de\7}\2\2\u00de\u00df")
        buf.write("\7/\2\2\u00df\u00f6\7_\2\2\u00e0\u00e1\7?\2\2\u00e1\u00e2")
        buf.write("\7?\2\2\u00e2\u00f6\7@\2\2\u00e3\u00e4\7?\2\2\u00e4\u00e5")
        buf.write("\7\61\2\2\u00e5\u00f6\7@\2\2\u00e6\u00e7\7?\2\2\u00e7")
        buf.write("\u00e8\7~\2\2\u00e8\u00f6\7@\2\2\u00e9\u00ea\7?\2\2\u00ea")
        buf.write("\u00eb\7^\2\2\u00eb\u00f6\7@\2\2\u00ec\u00ed\7>\2\2\u00ed")
        buf.write("\u00ee\7?\2\2\u00ee\u00f6\7@\2\2\u00ef\u00f0\7>\2\2\u00f0")
        buf.write("\u00f1\7\61\2\2\u00f1\u00f6\7@\2\2\u00f2\u00f3\7>\2\2")
        buf.write("\u00f3\u00f4\7~\2\2\u00f4\u00f6\7@\2\2\u00f5\u00d1\3\2")
        buf.write("\2\2\u00f5\u00d4\3\2\2\2\u00f5\u00d7\3\2\2\2\u00f5\u00da")
        buf.write("\3\2\2\2\u00f5\u00dd\3\2\2\2\u00f5\u00e0\3\2\2\2\u00f5")
        buf.write("\u00e3\3\2\2\2\u00f5\u00e6\3\2\2\2\u00f5\u00e9\3\2\2\2")
        buf.write("\u00f5\u00ec\3\2\2\2\u00f5\u00ef\3\2\2\2\u00f5\u00f2\3")
        buf.write("\2\2\2\u00f6B\3\2\2\2\u00f7\u00f8\7<\2\2\u00f8\u00f9\7")
        buf.write("\61\2\2\u00f9\u00fa\7<\2\2\u00faD\3\2\2\2\u00fb\u00fc")
        buf.write("\7<\2\2\u00fc\u00fd\7~\2\2\u00fd\u00fe\7<\2\2\u00feF\3")
        buf.write("\2\2\2\u00ff\u0100\7<\2\2\u0100\u0101\7^\2\2\u0101\u0102")
        buf.write("\7<\2\2\u0102H\3\2\2\2\u0103\u0104\7-\2\2\u0104\u0105")
        buf.write("\5M\'\2\u0105J\3\2\2\2\u0106\u0108\7\60\2\2\u0107\u0106")
        buf.write("\3\2\2\2\u0107\u0108\3\2\2\2\u0108\u010a\3\2\2\2\u0109")
        buf.write("\u010b\5M\'\2\u010a\u0109\3\2\2\2\u010b\u010c\3\2\2\2")
        buf.write("\u010c\u010a\3\2\2\2\u010c\u010d\3\2\2\2\u010d\u010f\3")
        buf.write("\2\2\2\u010e\u0110\7\60\2\2\u010f\u010e\3\2\2\2\u010f")
        buf.write("\u0110\3\2\2\2\u0110\u0112\3\2\2\2\u0111\u0113\5M\'\2")
        buf.write("\u0112\u0111\3\2\2\2\u0113\u0114\3\2\2\2\u0114\u0112\3")
        buf.write("\2\2\2\u0114\u0115\3\2\2\2\u0115L\3\2\2\2\u0116\u0118")
        buf.write("\4\62;\2\u0117\u0116\3\2\2\2\u0118\u0119\3\2\2\2\u0119")
        buf.write("\u0117\3\2\2\2\u0119\u011a\3\2\2\2\u011aN\3\2\2\2\u011b")
        buf.write("\u011f\t\3\2\2\u011c\u011e\t\4\2\2\u011d\u011c\3\2\2\2")
        buf.write("\u011e\u0121\3\2\2\2\u011f\u011d\3\2\2\2\u011f\u0120\3")
        buf.write("\2\2\2\u0120P\3\2\2\2\u0121\u011f\3\2\2\2\u0122\u0123")
        buf.write("\7\17\2\2\u0123\u0126\7\f\2\2\u0124\u0126\7\f\2\2\u0125")
        buf.write("\u0122\3\2\2\2\u0125\u0124\3\2\2\2\u0126R\3\2\2\2\u0127")
        buf.write("\u0129\t\5\2\2\u0128\u0127\3\2\2\2\u0129\u012a\3\2\2\2")
        buf.write("\u012a\u0128\3\2\2\2\u012a\u012b\3\2\2\2\u012b\u012c\3")
        buf.write("\2\2\2\u012c\u012d\b*\2\2\u012dT\3\2\2\2\u012e\u012f\7")
        buf.write("\61\2\2\u012f\u0130\7\61\2\2\u0130\u0134\3\2\2\2\u0131")
        buf.write("\u0133\n\6\2\2\u0132\u0131\3\2\2\2\u0133\u0136\3\2\2\2")
        buf.write("\u0134\u0132\3\2\2\2\u0134\u0135\3\2\2\2\u0135\u0137\3")
        buf.write("\2\2\2\u0136\u0134\3\2\2\2\u0137\u0138\b+\2\2\u0138V\3")
        buf.write("\2\2\2\u0139\u013a\7\61\2\2\u013a\u013b\7,\2\2\u013b\u013f")
        buf.write("\3\2\2\2\u013c\u013e\13\2\2\2\u013d\u013c\3\2\2\2\u013e")
        buf.write("\u0141\3\2\2\2\u013f\u0140\3\2\2\2\u013f\u013d\3\2\2\2")
        buf.write("\u0140\u0142\3\2\2\2\u0141\u013f\3\2\2\2\u0142\u0143\7")
        buf.write(",\2\2\u0143\u0144\7\61\2\2\u0144\u0145\3\2\2\2\u0145\u0146")
        buf.write("\b,\2\2\u0146X\3\2\2\2\23\2\u00ad\u00c3\u00c8\u00cd\u00cf")
        buf.write("\u00f5\u0107\u010c\u010f\u0114\u0119\u011f\u0125\u012a")
        buf.write("\u0134\u013f\3\b\2\2")
        return buf.getvalue()


class NarseseLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    SentenceType = 27
    NarsLogEntryPrefix = 28
    Believe = 29
    Wonder = 30
    Variable = 31
    COPULA = 32
    FutureEvent = 33
    PresentEvent = 34
    PastEvent = 35
    CYCLES = 36
    FLOAT = 37
    DIGIT = 38
    WORD = 39
    NewLine = 40
    WS = 41
    LineComment = 42
    BlockComment = 43

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'<'", "'{'", "'}'", "'>'", "'('", "'*'", "','", "')'", "'ECHO'", 
            "':'", "'['", "']'", "'%'", "';'", "'_'", "'&&'", "'||'", "'&|'", 
            "'&/'", "'|'", "'&'", "'/'", "'--'", "'\\'", "'-'", "'~'", "'^believe'", 
            "'^wonder'", "':/:'", "':|:'", "':\\:'" ]

    symbolicNames = [ "<INVALID>",
            "SentenceType", "NarsLogEntryPrefix", "Believe", "Wonder", "Variable", 
            "COPULA", "FutureEvent", "PresentEvent", "PastEvent", "CYCLES", 
            "FLOAT", "DIGIT", "WORD", "NewLine", "WS", "LineComment", "BlockComment" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "SentenceType", "NarsLogEntryPrefix", "Believe", "Wonder", 
                  "Variable", "COPULA", "FutureEvent", "PresentEvent", "PastEvent", 
                  "CYCLES", "FLOAT", "DIGIT", "WORD", "NewLine", "WS", "LineComment", 
                  "BlockComment" ]

    grammarFileName = "Narsese.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


